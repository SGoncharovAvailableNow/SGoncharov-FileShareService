// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SGoncharovFileSharingService.FileSharingContext;

#nullable disable

namespace SGoncharovFileSharingService.Migrations
{
    [DbContext(typeof(FileSharingContext.FileSharingContext))]
    [Migration("20240725135140_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SGoncharovFileSharingService.Models.Entities.FileEntities.FileEntity", b =>
                {
                    b.Property<string>("Uuid")
                        .HasColumnType("text");

                    b.Property<string>("DeletePassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("FileUUID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Uuid");

                    b.HasIndex("FileUUID");

                    b.HasIndex("UserId");

                    b.ToTable("FileEntities");
                });

            modelBuilder.Entity("SGoncharovFileSharingService.Models.Entities.UserEntities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileUUID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserEntities");
                });

            modelBuilder.Entity("SGoncharovFileSharingService.Models.Entities.FileEntities.FileEntity", b =>
                {
                    b.HasOne("SGoncharovFileSharingService.Models.Entities.UserEntities.UserEntity", null)
                        .WithMany("Files")
                        .HasForeignKey("FileUUID");

                    b.HasOne("SGoncharovFileSharingService.Models.Entities.UserEntities.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("SGoncharovFileSharingService.Models.Entities.UserEntities.UserEntity", b =>
                {
                    b.Navigation("Files");
                });
#pragma warning restore 612, 618
        }
    }
}
